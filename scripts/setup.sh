#!/bin/bash

# Epify Docker Setup Script
# This script helps new users get started quickly

echo "🚀 Welcome to Epify Docker Setup!"
echo "================================="

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "❌ Docker is not installed. Please install Docker first:"
    echo "   https://www.docker.com/get-started"
    exit 1
fi

# Check if Docker Compose is installed
if ! command -v docker-compose &> /dev/null; then
    echo "❌ Docker Compose is not installed. Please install Docker Compose first:"
    echo "   https://docs.docker.com/compose/install/"
    exit 1
fi

echo "✅ Docker and Docker Compose are installed"

# Function to generate secure JWT secret
generate_jwt_secret() {
    if command -v openssl &> /dev/null; then
        openssl rand -hex 32
    else
        # Fallback if openssl is not available
        echo "$(date +%s)$(whoami)$(hostname)" | sha256sum | head -c 64
    fi
}

# Create .env file if it doesn't exist
if [ ! -f .env ]; then
    echo "📝 Creating .env file with secure defaults..."
    
    # Generate a secure JWT secret
    JWT_SECRET=$(generate_jwt_secret)
    
    cat > .env << EOF
# =============================================================================
# EPIFY ENVIRONMENT CONFIGURATION
# =============================================================================
# This file was auto-generated by setup.sh
# DO NOT commit this file to version control!

# =============================================================================
# DATABASE CONFIGURATION  
# =============================================================================
# For Docker development (using docker-compose)
DATABASE_URL="postgresql://epify_user:epify_password@db:5432/epify_db"

# Database credentials (used by PostgreSQL container)
POSTGRES_DB="epify_db"
POSTGRES_USER="epify_user"
POSTGRES_PASSWORD="epify_password"

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# Auto-generated secure JWT secret
JWT_SECRET="${JWT_SECRET}"

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Application URL (used for CORS, redirects, etc.)
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Environment
NODE_ENV="development"
EOF
    echo "✅ Created .env file with secure JWT secret"
    echo "⚠️  IMPORTANT: The .env file contains secrets. Keep it secure!"
else
    echo "ℹ️  .env file already exists, skipping creation"
    echo "💡 To regenerate, delete .env and run this script again"
fi

echo ""
echo "🐳 Starting Docker containers..."
echo "This may take a few minutes on first run..."

# Start Docker containers
if docker-compose up --build -d; then
    echo ""
    echo "🎉 Epify is now running!"
    echo "================================="
    echo "📱 Web App: http://localhost:3000"
    echo "🗄️  Database: localhost:5432"
    echo ""
    echo "🔑 Demo Accounts:"
    echo "   Email: user1@epify.com | Password: password123"
    echo "   Email: user2@epify.com | Password: password123"  
    echo "   Email: user3@epify.com | Password: password123"
    echo ""
    echo "🛑 To stop: docker-compose down"
    echo "🗑️  To reset: docker-compose down -v"
    echo ""
    echo "⚠️  SECURITY NOTE:"
    echo "   - Your .env file contains auto-generated secrets"
    echo "   - For production, review and update all credentials"
    echo "   - Never commit .env file to version control"
else
    echo "❌ Failed to start Docker containers"
    echo "Check the error messages above and try again"
    exit 1
fi 